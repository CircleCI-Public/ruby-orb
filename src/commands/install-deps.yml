description: "Install gems with Bundler."
parameters:
  with-cache:
    type: boolean
    default: true
    description: Enable automatic caching of your gemfile dependencies for increased speed.
  key:
    description: "The cache key to use. The key is immutable."
    type: string
    default: "gems-v1"
  path:
    description: >
      Installation path.
      By default, it will run bundle with `--deployment` flag and installs gems to the vendor/bundle directory.
    default: "./vendor/bundle"
    type: string
  bundler-version:
    description: >
      Configure which version of bundler to install and utilize.
      By default, it gets the bundler version from Gemfile.lock, but if it is not working use this to override.
    default: ""
    type: string
  app-dir:
    description: >
      Path to the directory containing your Gemfile file. Not needed if Gemfile lives in the root.
    default: .
    type: string
  include-branch-in-cache-key:
    type: boolean
    default: true
    description: >
      If true, this cache bucket will only apply to jobs within the same branch.
  gemfile:
    description: Name of your Gemfile file.
    default: Gemfile
    type: string
  pre-install-steps:
    description: >
      Steps that will be executed between installing bundler, and running bundle install
    type: steps
    default: []
steps:
  - when:
      condition: <<parameters.with-cache>>
      steps:
        - restore_cache:
            keys:
              - << parameters.key >>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>{{ checksum "<<parameters.app-dir>>/<<parameters.gemfile>>.lock"  }}
              - << parameters.key >>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>
  - run:
      name: Install Bundler
      working_directory: <<parameters.app-dir>>
      environment:
        PARAM_GEMFILE: << parameters.gemfile >>
        PARAM_BUNDLER_VERSION: << parameters.bundler-version >>
      command: << include(scripts/install-bundler.sh) >>
  - steps: << parameters.pre-install-steps >>
  - run:
      name: Bundle Install <<^parameters.with-cache>>(No Cache)<</parameters.with-cache>>
      working_directory: <<parameters.app-dir>>
      environment:
        PARAM_GEMFILE: << parameters.gemfile >>
        PARAM_PATH: << parameters.path >>
      command: << include(scripts/install-deps.sh) >>
  - when:
      condition: << parameters.with-cache >>
      steps:
        - save_cache:
            key: << parameters.key >>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>{{ checksum "<<parameters.app-dir>>/<<parameters.gemfile>>.lock"  }}
            paths:
              - <<parameters.app-dir>>/<< parameters.path >>
